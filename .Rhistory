Modalwert = modalwert,
Minimum = minimum,
Unteres_Quartil = unteresQ,
Median = med,
Oberes_Quartil = oberesQ,
Maximum = maximum
),
Streuung = list(Spannweite = spannweite,
Varianz = varianz,
Standardabweichung = stand,
Quartilsdifferenz = quart
)
))
}
metric(A)
metric <- function(x) {
# Lagemasse
mittel <- mean(x)
med <- median(x)
modalwert <- which.max(table(x))
oberesQ <- quantile(x, c(0, 0.75))
unteresQ <- quantile(x, c(0, 0.25))
minimum <- min(x)
maximum <- max(x)
# Streuungsmasse
spannweite <- range(x)
varianz <- var(x)
stand <- sd(x)
quart <- oberesQ - unteresQ
return(list(
Lage = list(Mittelwert = mittel,
Modalwert = modalwert,
Minimum = minimum,
Unteres_Quartil = unteresQ,
Median = med,
Oberes_Quartil = oberesQ,
Maximum = maximum
),
Streuung = list(Spannweite = spannweite,
Varianz = varianz,
Standardabweichung = stand,
Quartilsdifferenz = quart
)
))
}
categorical <- function(x)
m
metric(A)
quantile(A, 0.75)
oberesQ <- quantile(A, 0.75)
oberesQ <- unname(quantile(A, 0.75))
metric <- function(x) {
# Lagemasse
mittel <- mean(x)
med <- median(x)
modalwert <- which.max(table(x))
oberesQ <- unname(quantile(A, 0.75))
unteresQ <- unname(quantile(x, 0.25))
minimum <- min(x)
maximum <- max(x)
# Streuungsmasse
spannweite <- maximum - minimum
varianz <- var(x)
stand <- sd(x)
quart <- oberesQ - unteresQ
return(list(
Lage = list(Mittelwert = mittel,
Modalwert = modalwert,
Minimum = minimum,
Unteres_Quartil = unteresQ,
Median = med,
Oberes_Quartil = oberesQ,
Maximum = maximum
),
Streuung = list(Spannweite = spannweite,
Varianz = varianz,
Standardabweichung = stand,
Quartilsdifferenz = quart
)
))
}
metric(A)
A <- as.vector(A)
metric(A)
# benoetigte Pakete
install.packages("Kendall")
library(Kendall)
rank(1,1)
rank(c(1,2,2,3))
# benoetigte Pakete
install.packages("Kendall")
install.packages("Kendall")
# benoetigte Pakete
#install.packages("Kendall")
library(Kendall)
source("Funktionen2.R")
setwd("~/Desktop/Studium/Data Science/3. Semester/wissenschaftliches Arbeiten/Github/Gruppenarbeit")
# benoetigte Pakete
#install.packages("Kendall")
library(Kendall)
# Working Directory muss korrekt gesetzt sein!
source("Funktionen2.R")
metric <- function(x) {
# Lagemasse
mittel <- mean(x)
med <- median(x)
modalwert <- which.max(table(x))
oberesQ <- unname(quantile(A, 0.75))
unteresQ <- unname(quantile(x, 0.25))
minimum <- min(x)
maximum <- max(x)
# Streuungsmasse
spannweite <- maximum - minimum
varianz <- var(x)
stand <- sd(x)
quart <- oberesQ - unteresQ
return(list(
Lage = list(Mittelwert = mittel,
Modalwert = modalwert,
Minimum = minimum,
Unteres_Quartil = unteresQ,
Median = med,
Oberes_Quartil = oberesQ,
Maximum = maximum
),
Streuung = list(Spannweite = spannweite,
Varianz = varianz,
Standardabweichung = stand,
Quartilsdifferenz = quart
)
))
}
categorical <- function(x) {
# Lagemasse
med <- median(x)
modalwert <- which.max(table(x))
oberesQ <- unname(quantile(A, 0.75))
unteresQ <- unname(quantile(x, 0.25))
minimum <- min(x)
maximum <- max(x)
# Streuungsmasse
spannweite <- maximum - minimum
varianz <- var(x)
stand <- sd(x)
quart <- oberesQ - unteresQ
return(list(
Lage = list(Modalwert = modalwert,
Minimum = minimum,
Unteres_Quartil = unteresQ,
Median = med,
Oberes_Quartil = oberesQ,
Maximum = maximum
),
Streuung = list(Spannweite = spannweite,
Quartilsdifferenz = quart
)
))
}
categoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
metricCategoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
categorize <- function(x) {
x_cat <- vector("character", length(x))
for (i in seq_along(x)) {
x_cat[i] <- category(x, x[i])
}
x_cat <- as.factor(x_cat)
return(x_cat)
}
## Testbereich
x1 <- rnorm(100)
x2 <- sample(1:7, 100, replace = TRUE,
prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
metric(x1)
metric <- function(x) {
# Lagemasse
mittel <- mean(x)
med <- median(x)
modalwert <- which.max(table(x))
oberesQ <- unname(quantile(x, 0.75))
unteresQ <- unname(quantile(x, 0.25))
minimum <- min(x)
maximum <- max(x)
# Streuungsmasse
spannweite <- maximum - minimum
varianz <- var(x)
stand <- sd(x)
quart <- oberesQ - unteresQ
return(list(
Lage = list(Mittelwert = mittel,
Modalwert = modalwert,
Minimum = minimum,
Unteres_Quartil = unteresQ,
Median = med,
Oberes_Quartil = oberesQ,
Maximum = maximum
),
Streuung = list(Spannweite = spannweite,
Varianz = varianz,
Standardabweichung = stand,
Quartilsdifferenz = quart
)
))
}
categorical <- function(x) {
# Lagemasse
med <- median(x)
modalwert <- which.max(table(x))
oberesQ <- unname(quantile(A, 0.75))
unteresQ <- unname(quantile(x, 0.25))
minimum <- min(x)
maximum <- max(x)
# Streuungsmasse
spannweite <- maximum - minimum
varianz <- var(x)
stand <- sd(x)
quart <- oberesQ - unteresQ
return(list(
Lage = list(Modalwert = modalwert,
Minimum = minimum,
Unteres_Quartil = unteresQ,
Median = med,
Oberes_Quartil = oberesQ,
Maximum = maximum
),
Streuung = list(Spannweite = spannweite,
Quartilsdifferenz = quart
)
))
}
categoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
metricCategoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
categorize <- function(x) {
x_cat <- vector("character", length(x))
for (i in seq_along(x)) {
x_cat[i] <- category(x, x[i])
}
x_cat <- as.factor(x_cat)
return(x_cat)
}
## Testbereich
x1 <- rnorm(100)
x2 <- sample(1:7, 100, replace = TRUE,
prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
metric(x1)
categorical(x2)
categorical <- function(x) {
# Lagemasse
med <- median(x)
modalwert <- which.max(table(x))
oberesQ <- unname(quantile(x, 0.75))
unteresQ <- unname(quantile(x, 0.25))
minimum <- min(x)
maximum <- max(x)
# Streuungsmasse
spannweite <- maximum - minimum
varianz <- var(x)
stand <- sd(x)
quart <- oberesQ - unteresQ
return(list(
Lage = list(Modalwert = modalwert,
Minimum = minimum,
Unteres_Quartil = unteresQ,
Median = med,
Oberes_Quartil = oberesQ,
Maximum = maximum
),
Streuung = list(Spannweite = spannweite,
Quartilsdifferenz = quart
)
))
}
categoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
metricCategoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
categorize <- function(x) {
x_cat <- vector("character", length(x))
for (i in seq_along(x)) {
x_cat[i] <- category(x, x[i])
}
x_cat <- as.factor(x_cat)
return(x_cat)
}
## Testbereich
x1 <- rnorm(100)
x2 <- sample(1:7, 100, replace = TRUE,
prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
metric(x1)
categorical(x2)
x3 <- sample(1:7, 100, replace = TRUE,
prob = c(0.01, 0.01, 0.01, 0.02, 0.05, 0.4, 0.5))
categoricalRelation(x2, x3)
Kendall(x2,x3)
Kendall(x2,x3)$tau
save <- Kendall(x2,x3)
categoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau[[1]]
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
metricCategoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
categorize <- function(x) {
x_cat <- vector("character", length(x))
for (i in seq_along(x)) {
x_cat[i] <- category(x, x[i])
}
x_cat <- as.factor(x_cat)
return(x_cat)
}
## Testbereich
x1 <- rnorm(100)
x2 <- sample(1:7, 100, replace = TRUE,
prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
x3 <- sample(1:7, 100, replace = TRUE,
prob = c(0.01, 0.01, 0.01, 0.02, 0.05, 0.4, 0.5))
metric(x1)
categorical(x2)
categoricalRelation(x2, x3)
metricCategoricalRelation(x1, x2)
metricCategoricalRelation <- function(x, y) {
x_r <- rank(x)
y_r <- rank(y)
kend <- Kendall(x_r, y_r)$tau[[1]]
spear <- cov(x_r, y_r) / (sd(x_r) * sd(y_r))
return(list(Spearman = spear,
Kendall = kend))
}
categorize <- function(x) {
x_cat <- vector("character", length(x))
for (i in seq_along(x)) {
x_cat[i] <- category(x, x[i])
}
x_cat <- as.factor(x_cat)
return(x_cat)
}
## Testbereich
x1 <- rnorm(100)
x2 <- sample(1:7, 100, replace = TRUE,
prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
x3 <- sample(1:7, 100, replace = TRUE,
prob = c(0.01, 0.01, 0.01, 0.02, 0.05, 0.4, 0.5))
metric(x1)
categorical(x2)
categoricalRelation(x2, x3)
metricCategoricalRelation(x1, x2)
categorize(x1)
categorize(x2)
"ID" <- c(1:100)
"Alter" <- numeric(100)
set.seed(23362)
"Alter" <- rnorm(100, 25, 2)
"Studienfach" <- numeric(100)
set.seed(6474)
"Studienfach" <- sample(c("Statistik", "Data Science", "Informatik",
"Mathematik"), size = 100,
prob = c(0.35, 0.35, 0.25, 0.05),
replace = TRUE)
"Interesse an Mathematik" <- numeric(100)
set.seed(84638)
for(i in 1:100){
if(Studienfach[i] == "Statistik"){
`Interesse an Mathematik`[i] <- sample(c(1:7), 1, prob = c(0.05, 0.1, 0.1, 0.15, 0.2, 0.3, 0.1))
} else if(Studienfach[i] == "Data Science"){
`Interesse an Mathematik`[i] <- sample(c(1:7), 1, prob = c(0.1, 0.15, 0.15, 0.2, 0.2, 0.1, 0.1))
} else if(Studienfach[i] == "Informatik"){
`Interesse an Mathematik`[i] <- sample(c(1:7), 1, prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
} else if(Studienfach[i] == "Mathematik"){
`Interesse an Mathematik`[i] <- sample(c(1:7), 1, prob = c(0.01, 0.01, 0.01, 0.02, 0.05, 0.4, 0.5))
}
}
"Interesse an Programmieren" <- numeric(100)
set.seed(84638)
for(i in 1:100){
if(Studienfach[i] == "Statistik"){
`Interesse an Programmieren`[i] <- sample(c(1:7), 1, prob = c(0.05, 0.1, 0.1, 0.25, 0.2, 0.2, 0.1))
} else if(Studienfach[i] == "Data Science"){
`Interesse an Programmieren`[i] <- sample(c(1:7), 1, prob = c(0.1, 0.1, 0.1, 0.2, 0.2, 0.2, 0.1))
} else if(Studienfach[i] == "Informatik"){
`Interesse an Programmieren`[i] <- sample(c(1:7), 1, prob = c(0.01, 0.01, 0.01, 0.01, 0.01, 0.05, 0.9))
} else if(Studienfach[i] == "Mathematik"){
`Interesse an Programmieren`[i] <- sample(c(1:7), 1, prob = c(0.4, 0.03, 0.2, 0.025, 0.025, 0.025, 0.025))
}
}
"Mathematik-LK(ja/nein)" <- integer(100)
set.seed(467836)
for(i in 1:100){
if(Studienfach[i] == "Statistik"){
`Mathematik-LK(ja/nein)`[i] <- sample(c(TRUE, FALSE), 1, prob = c(0.7, 0.3))
} else if(Studienfach[i] == "Data Science"){
`Mathematik-LK(ja/nein)`[i] <- sample(c(TRUE, FALSE), 1, prob = c(0.4, 0.6))
} else if(Studienfach[i] == "Informatik"){
`Mathematik-LK(ja/nein)`[i] <- sample(c(TRUE, FALSE), 1, prob = c(0.2, 0.8))
} else if(Studienfach[i] == "Mathematik"){
`Mathematik-LK(ja/nein)`[i] <- sample(c(TRUE, FALSE), 1, prob = c(0.9, 0.1))
}
}
# Zusammenfassen der Spalten in einem Datensatz
Datensatz <- data.frame(`ID`, `Alter`, `Studienfach`, `Interesse an Mathematik`,
`Interesse an Programmieren`, `Mathematik-LK(ja/nein)`)
`Interesse an Mathematik` <- as.factor(`Interesse an Mathematik`)
"ID" <- c(1:100)
"Alter" <- numeric(100)
set.seed(23362)
"Alter" <- rnorm(100, 25, 2)
"Studienfach" <- numeric(100)
set.seed(6474)
"Studienfach" <- sample(c("Statistik", "Data Science", "Informatik",
"Mathematik"), size = 100,
prob = c(0.35, 0.35, 0.25, 0.05),
replace = TRUE)
"Interesse an Mathematik" <- numeric(100)
set.seed(84638)
for(i in 1:100){
if(Studienfach[i] == "Statistik"){
`Interesse an Mathematik`[i] <- sample(c(1:7), 1, prob = c(0.05, 0.1, 0.1, 0.15, 0.2, 0.3, 0.1))
} else if(Studienfach[i] == "Data Science"){
`Interesse an Mathematik`[i] <- sample(c(1:7), 1, prob = c(0.1, 0.15, 0.15, 0.2, 0.2, 0.1, 0.1))
} else if(Studienfach[i] == "Informatik"){
`Interesse an Mathematik`[i] <- sample(c(1:7), 1, prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
} else if(Studienfach[i] == "Mathematik"){
`Interesse an Mathematik`[i] <- sample(c(1:7), 1, prob = c(0.01, 0.01, 0.01, 0.02, 0.05, 0.4, 0.5))
}
}
"Interesse an Programmieren" <- numeric(100)
set.seed(84638)
for(i in 1:100){
if(Studienfach[i] == "Statistik"){
`Interesse an Programmieren`[i] <- sample(c(1:7), 1, prob = c(0.05, 0.1, 0.1, 0.25, 0.2, 0.2, 0.1))
} else if(Studienfach[i] == "Data Science"){
`Interesse an Programmieren`[i] <- sample(c(1:7), 1, prob = c(0.1, 0.1, 0.1, 0.2, 0.2, 0.2, 0.1))
} else if(Studienfach[i] == "Informatik"){
`Interesse an Programmieren`[i] <- sample(c(1:7), 1, prob = c(0.01, 0.01, 0.01, 0.01, 0.01, 0.05, 0.9))
} else if(Studienfach[i] == "Mathematik"){
`Interesse an Programmieren`[i] <- sample(c(1:7), 1, prob = c(0.4, 0.03, 0.2, 0.025, 0.025, 0.025, 0.025))
}
}
"Mathematik-LK(ja/nein)" <- integer(100)
set.seed(467836)
for(i in 1:100){
if(Studienfach[i] == "Statistik"){
`Mathematik-LK(ja/nein)`[i] <- sample(c(TRUE, FALSE), 1, prob = c(0.7, 0.3))
} else if(Studienfach[i] == "Data Science"){
`Mathematik-LK(ja/nein)`[i] <- sample(c(TRUE, FALSE), 1, prob = c(0.4, 0.6))
} else if(Studienfach[i] == "Informatik"){
`Mathematik-LK(ja/nein)`[i] <- sample(c(TRUE, FALSE), 1, prob = c(0.2, 0.8))
} else if(Studienfach[i] == "Mathematik"){
`Mathematik-LK(ja/nein)`[i] <- sample(c(TRUE, FALSE), 1, prob = c(0.9, 0.1))
}
}
`Interesse an Mathematik` <- as.factor(`Interesse an Mathematik`)
`Interesse an Programmieren` <- as.factor(`Interesse am Programmieren`)
`Interesse an Programmieren` <- as.factor(`Interesse an Programmieren`)
`Mathematik-LK(ja/nein)` <- as.factor(`Mathematik-LK(ja/nein)`)
Studienfach <- as.factor(Studienfach)
`Interesse an Mathematik` <- as.factor(`Interesse an Mathematik`)
`Interesse an Programmieren` <- as.factor(`Interesse an Programmieren`)
`Mathematik-LK(ja/nein)` <- as.factor(`Mathematik-LK(ja/nein)`)
# Zusammenfassen der Spalten in einem Datensatz
Datensatz <- data.frame(`ID`, `Alter`, `Studienfach`, `Interesse an Mathematik`,
`Interesse an Programmieren`, `Mathematik-LK(ja/nein)`)
View(Datensatz)
write.csv(Datensatz, "data-wissenschaftliches-Arbeiten.csv")
plotCategorical = function(x)
{
stopifnot(is.data.frame(x))
par(mfrow = c(2, 2))
for(i in 1:length(x))
{
if(is.numeric(x[,i]))
{
boxplot(x[,i])
}
else
{
barplot(nominalH(x[, i]))
}
}
}
## Testbereich
x1 <- rnorm(100)
x2 <- sample(1:7, 100, replace = TRUE,
prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
x3 <- sample(1:7, 100, replace = TRUE,
prob = c(0.01, 0.01, 0.01, 0.02, 0.05, 0.4, 0.5))
metric(x1)
categorical(x2)
categoricalRelation(x2, x3)
metricCategoricalRelation(x1, x2)
categorize(x1)
categorize(x2)
plotCategorical(x1,x2)
plotCategorical(x1)
plotCategorical(as.dataframe(x2))
plotCategorical(as.data.frame(x2))
plotCategorical(as.data.frame(rep(x2,4)))
as.data.frame(rep(x2,4))
plotCategorical(as.data.frame(matrix(rep(x2,4),100)))
boxplot(as.data.frame(matrix(rep(x2,4),100)))
barplot(as.data.frame(matrix(rep(x2,4),100)))
plotCategorical = function(x)
{
stopifnot(is.data.frame(x))
par(mfrow = c(2, 2))
if(is.numeric(x))
{
boxplot(x)
}
else
{
barplot(nominalH(x))
}
}
## Testbereich
x1 <- rnorm(100)
x2 <- sample(1:7, 100, replace = TRUE,
prob = c(0.2, 0.25, 0.2, 0.15, 0.1, 0.09, 0.01))
x3 <- sample(1:7, 100, replace = TRUE,
prob = c(0.01, 0.01, 0.01, 0.02, 0.05, 0.4, 0.5))
metric(x1)
categorical(x2)
categoricalRelation(x2, x3)
metricCategoricalRelation(x1, x2)
categorize(x1)
categorize(x2)
boxplot(as.data.frame(matrix(rep(x2,4),100)))
par(mfrow = c(1, 1))
